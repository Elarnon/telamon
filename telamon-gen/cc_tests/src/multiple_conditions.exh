set BasicBlock:
  item_type = "ir::basic_block::Obj"
  id_type = "ir::basic_block::Id"
  item_getter = "ir::basic_block::get($fun, $id)"
  id_getter = "ir::basic_block::Obj::id($item)"
  iterator = "ir::basic_block::iter($fun)"
  var_prefix = "bb"
  new_objs = "$objs.basic_block"
end

set Instruction subsetof BasicBlock:
  item_type = "ir::inst::Obj"
  id_type = "ir::inst::Id"
  item_getter = "ir::inst::get($fun, $id)"
  id_getter = "ir::inst::Obj::id($item)"
  iterator = "ir::inst::iter($fun)"
  var_prefix = "inst"
  new_objs = "$objs.inst"
  from_superset = "ir::inst::from_superset($fun, $item)"
end

set Dimension subsetof BasicBlock:
  disjoint: Instruction
  item_type = "ir::dim::Obj"
  id_type = "ir::dim::Id"
  item_getter = "ir::dim::get($fun, $id)"
  id_getter = "ir::dim::Obj::id($item)"
  iterator = "ir::dim::iter($fun)"
  var_prefix = "dim"
  new_objs = "$objs.dim"
  from_superset = "ir::dim::from_superset($fun, $item)"
end

/// Test conditions on mutiple enums.
define enum enum_1($bb in BasicBlock):
  value A:
  value B:
  value C:
end

/// Test conditions on mutiple enums.
define enum enum_2($bb in BasicBlock):
  value A:
  value B:
  value C:
end

require forall $lhs in BasicBlock:
  forall $rhs in BasicBlock:
    enum_1($lhs) is A || enum_2($lhs) is B || enum_1($rhs) is C

/// Test a rule with multiple conditions on the same input.
define enum enum_3($bb in BasicBlock):
  value A:
  value B:
  value C:
end

require forall $lhs in BasicBlock:
  forall $rhs in BasicBlock:
    enum_3($lhs) is A || enum_3($lhs) != enum_3($rhs)

/// Test the combination of code and enum conditions.
define enum enum_4($bb in BasicBlock):
  value A:
    requires forall $other in BasicBlock:
      enum_4($other) is B || "$other.condition()"
  value B:
  value C:
end

/// Test subtype conditions at the rule level.
define enum enum_5($bb in BasicBlock):
  value A:
  value B:
  value C:
end

require forall $dim in Dimension:
  enum_5($dim) is not C

/// Test subtype conditions at the filter level.
define enum enum_6($inst in Instruction):
  value A:
    requires enum_5($inst) is A
  value B:
end
