set Instruction:
  item_type = "ir::inst::Obj"
  id_type = "ir::inst::Id"
  item_getter = "ir::inst::get($fun, $id)"
  id_getter = "ir::inst::Obj::id($item)"
  iterator = "ir::inst::iter($fun)"
  var_prefix = "inst"
  new_objs = "$objs.inst"
end

set Dimension:
  item_type = "ir::dim::Obj"
  id_type = "ir::dim::Id"
  item_getter = "ir::dim::get($fun, $id)"
  id_getter = "ir::dim::Obj::id($item)"
  iterator = "ir::dim::iter($fun)"
  var_prefix = "dim"
  new_objs = "$objs.dim"
end

define enum foo($dim in Dimension):
  value A:
  value B:
end

define half counter half_counter($inst in Instruction):
  forall $dim in Dimension:
    sum "1" when:
      foo($dim) is A
end

require forall $inst in Instruction:
  half_counter($inst) < "3"
